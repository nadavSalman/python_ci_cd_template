# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions



name: Python package

env:
  GITHUB_SHA: ${{ github.sha }} 
  GITHUB_REF: ${{ github.ref }} 
  IMAGE: ci-cd-dev
  REGISTRY_HOSTNAME: none
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  

on: push

    
jobs:
  install-dependecies-and-tests:
    name: CI-install-dependecies-and-tests
    runs-on: ubuntu-latest
   
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 
        uses: actions/setup-python@v2
        
        with:
          python-version: 3.9
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
          
      - name: Lint with flake8
        run: |
          echo 'Lint in feature'
          # stop the build if there are Python syntax errors or undefined names
          # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with unittest 
        run: |
          echo 'Run tests'
          echo 'Soon will be transfer to pytest'
          pwd
          python -m unittest -v    
          
      

  image-build-and-push:
    needs: [install-dependecies-and-tests]
    name: CI-image-build-and-push
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    # Build the Docker image
    - name: Build
      env: 
        DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      run: |
        export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'`
        
        export TAG=$GITHUB_RUN_ID
        echo $TAG
        docker build -t "$DOCKER_HUB_USERNAME"/"$IMAGE":"$TAG" .
     
    
    # View images : 
    - name: Docker images
      run: |
        docker images
    - name: Login to DockerHub 
      uses: docker/login-action@v1 
      with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      
    - name: Push image
      run: |
        export TAG=$GITHUB_RUN_ID
        export REPOSITORY_NAME="nadavdevops"
        docker push "$REPOSITORY_NAME"/"$IMAGE":"$TAG" 

        echo "Push latest tag"
        export LATEST_TAG="latest"
        docker tag "$REPOSITORY_NAME"/"$IMAGE":"$TAG"  "$REPOSITORY_NAME"/"$IMAGE":"$LATEST_TAG"
        docker push  "$REPOSITORY_NAME"/"$IMAGE":"$LATEST_TAG"
        #nadavdevops/ci-cd-dev:$TAG
  
  
  GCP-Cloud-Run:
    needs: [image-build-and-push]
    name: CI-image-build-and-push-to-GCP
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    # Build the Docker image
    - name: Setup Gcloud Account
      env: 
        IMAGE_NAME: nadavdevops/ci-cd-dev:tagname
      run: |
        echo $IMAGE_NAME
       
  
  
